/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	// // jQuery
	// require('./jquery.min.js');
	// // Angular modules
	// require('./angular.min.js');
	// require('./angular-route.min.js');
	// // Firebase modules
	// require('./firebase.js')
	// require('./angularfire.js');
	// // Bootstrap module
	// require('./bootstrap.min.js');
	// // App modules
	// require('./app-config.js');
	// require('./app-routes.js');
	// require('./app-ctrl.js');
	// require('./app-service.js');
	// Clipboard module
	//require('./clipboard.min.js');
	
	$(function() {
	    var header = $("header.hero"),
	        docsContainer = $("#docs article");
	    // Alert widget
	    function sideAlert(msg) {
	        console.log('sideAlert' + msg);
	    }
	    // Fullscreen search on focus
	    $("#search").focusin(function() {
	        $(".header-tools").addClass("full-screen");
	        header.addClass('collapse');
	    }).focusout(function() {
	        $(".header-tools").removeClass("full-screen");
	        header.removeClass('collapse');
	    });
	    // tools function
	    $("#docsGridview").on('click', function() {
	        docsContainer.addClass('col-md-6').removeClass('col-md-12');
	    });
	    // Aside sticky panel
	    $('aside section').affix({
	        offset: {
	            top: $('aside').offset().top
	        }
	    });
	    // Tooltips
	    $('[data-toggle="tooltip"]').tooltip();
	    // Capture 's' key to focus search input
	    firstTime = false;
	
	document.onkeyup = function(e) {
	  var c = e.keyCode;
	  if(e.shiftKey && c == 83) {
	    if(!firstTime) { $("#search").focus(); firstTime = true; }
	    else { firstTime = false; $("#search").val(null).blur(); }
	  }
	}
	
	    // Clipboard copy handlers
	    $('.copy-code').on('click', function() {
	        sideAlert('Code copied to clipboard');
	    });
	    $('.copy-permalink').on('click', function() {
	        sideAlert('Link copied to clipboard');
	    });
	    new Clipboard('.copy-code');
	    new Clipboard('.copy-permalink');
	});


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNTI0YjY5OTc4NWNjYjNjNzQyZWIiLCJ3ZWJwYWNrOi8vLy4vYXBwL3NjcmlwdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7QUN0Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUJBQW9CLHNCQUFzQixrQkFBa0I7QUFDNUQsV0FBVSxtQkFBbUIsK0JBQStCO0FBQzVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0E7QUFDQSxNQUFLO0FBQ0w7QUFDQTtBQUNBLEVBQUMiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCA1MjRiNjk5Nzg1Y2NiM2M3NDJlYiIsIi8vIC8vIGpRdWVyeVxuLy8gcmVxdWlyZSgnLi9qcXVlcnkubWluLmpzJyk7XG4vLyAvLyBBbmd1bGFyIG1vZHVsZXNcbi8vIHJlcXVpcmUoJy4vYW5ndWxhci5taW4uanMnKTtcbi8vIHJlcXVpcmUoJy4vYW5ndWxhci1yb3V0ZS5taW4uanMnKTtcbi8vIC8vIEZpcmViYXNlIG1vZHVsZXNcbi8vIHJlcXVpcmUoJy4vZmlyZWJhc2UuanMnKVxuLy8gcmVxdWlyZSgnLi9hbmd1bGFyZmlyZS5qcycpO1xuLy8gLy8gQm9vdHN0cmFwIG1vZHVsZVxuLy8gcmVxdWlyZSgnLi9ib290c3RyYXAubWluLmpzJyk7XG4vLyAvLyBBcHAgbW9kdWxlc1xuLy8gcmVxdWlyZSgnLi9hcHAtY29uZmlnLmpzJyk7XG4vLyByZXF1aXJlKCcuL2FwcC1yb3V0ZXMuanMnKTtcbi8vIHJlcXVpcmUoJy4vYXBwLWN0cmwuanMnKTtcbi8vIHJlcXVpcmUoJy4vYXBwLXNlcnZpY2UuanMnKTtcbi8vIENsaXBib2FyZCBtb2R1bGVcbi8vcmVxdWlyZSgnLi9jbGlwYm9hcmQubWluLmpzJyk7XG5cbiQoZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhlYWRlciA9ICQoXCJoZWFkZXIuaGVyb1wiKSxcbiAgICAgICAgZG9jc0NvbnRhaW5lciA9ICQoXCIjZG9jcyBhcnRpY2xlXCIpO1xuICAgIC8vIEFsZXJ0IHdpZGdldFxuICAgIGZ1bmN0aW9uIHNpZGVBbGVydChtc2cpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3NpZGVBbGVydCcgKyBtc2cpO1xuICAgIH1cbiAgICAvLyBGdWxsc2NyZWVuIHNlYXJjaCBvbiBmb2N1c1xuICAgICQoXCIjc2VhcmNoXCIpLmZvY3VzaW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICQoXCIuaGVhZGVyLXRvb2xzXCIpLmFkZENsYXNzKFwiZnVsbC1zY3JlZW5cIik7XG4gICAgICAgIGhlYWRlci5hZGRDbGFzcygnY29sbGFwc2UnKTtcbiAgICB9KS5mb2N1c291dChmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIi5oZWFkZXItdG9vbHNcIikucmVtb3ZlQ2xhc3MoXCJmdWxsLXNjcmVlblwiKTtcbiAgICAgICAgaGVhZGVyLnJlbW92ZUNsYXNzKCdjb2xsYXBzZScpO1xuICAgIH0pO1xuICAgIC8vIHRvb2xzIGZ1bmN0aW9uXG4gICAgJChcIiNkb2NzR3JpZHZpZXdcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGRvY3NDb250YWluZXIuYWRkQ2xhc3MoJ2NvbC1tZC02JykucmVtb3ZlQ2xhc3MoJ2NvbC1tZC0xMicpO1xuICAgIH0pO1xuICAgIC8vIEFzaWRlIHN0aWNreSBwYW5lbFxuICAgICQoJ2FzaWRlIHNlY3Rpb24nKS5hZmZpeCh7XG4gICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgdG9wOiAkKCdhc2lkZScpLm9mZnNldCgpLnRvcFxuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy8gVG9vbHRpcHNcbiAgICAkKCdbZGF0YS10b2dnbGU9XCJ0b29sdGlwXCJdJykudG9vbHRpcCgpO1xuICAgIC8vIENhcHR1cmUgJ3MnIGtleSB0byBmb2N1cyBzZWFyY2ggaW5wdXRcbiAgICBmaXJzdFRpbWUgPSBmYWxzZTtcblxuZG9jdW1lbnQub25rZXl1cCA9IGZ1bmN0aW9uKGUpIHtcbiAgdmFyIGMgPSBlLmtleUNvZGU7XG4gIGlmKGUuc2hpZnRLZXkgJiYgYyA9PSA4Mykge1xuICAgIGlmKCFmaXJzdFRpbWUpIHsgJChcIiNzZWFyY2hcIikuZm9jdXMoKTsgZmlyc3RUaW1lID0gdHJ1ZTsgfVxuICAgIGVsc2UgeyBmaXJzdFRpbWUgPSBmYWxzZTsgJChcIiNzZWFyY2hcIikudmFsKG51bGwpLmJsdXIoKTsgfVxuICB9XG59XG5cbiAgICAvLyBDbGlwYm9hcmQgY29weSBoYW5kbGVyc1xuICAgICQoJy5jb3B5LWNvZGUnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2lkZUFsZXJ0KCdDb2RlIGNvcGllZCB0byBjbGlwYm9hcmQnKTtcbiAgICB9KTtcbiAgICAkKCcuY29weS1wZXJtYWxpbmsnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2lkZUFsZXJ0KCdMaW5rIGNvcGllZCB0byBjbGlwYm9hcmQnKTtcbiAgICB9KTtcbiAgICBuZXcgQ2xpcGJvYXJkKCcuY29weS1jb2RlJyk7XG4gICAgbmV3IENsaXBib2FyZCgnLmNvcHktcGVybWFsaW5rJyk7XG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3NjcmlwdHMuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==